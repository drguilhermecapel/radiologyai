events {
    worker_connections 1024;
}

http {
    upstream medai_fastapi {
        server medai-app:8000;
    }
    
    upstream medai_flask {
        server medai-app:8080;
    }
    
    upstream medai_dashboard {
        server medai-app:8084;
    }

    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
        limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
        
        # FastAPI endpoints (primary)
        location /api/v1/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://medai_fastapi;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Upload size limit
            client_max_body_size 50M;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }
        
        # Image analysis endpoint with special handling
        location /api/v1/analyze {
            limit_req zone=upload burst=5 nodelay;
            proxy_pass http://medai_fastapi;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Large upload support
            client_max_body_size 100M;
            
            # Extended timeouts for AI processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 120s;
            proxy_read_timeout 600s;
        }
        
        # Legacy Flask endpoints (backward compatibility)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://medai_flask;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            client_max_body_size 50M;
        }
        
        # Clinical monitoring dashboard
        location /dashboard/ {
            proxy_pass http://medai_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files and web interface
        location / {
            proxy_pass http://medai_flask;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://medai_fastapi/api/v1/health;
            access_log off;
        }
    }
    
    # HTTPS server configuration (uncomment when SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/ssl/certs/medai.crt;
    #     ssl_certificate_key /etc/ssl/certs/medai.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Same location blocks as HTTP server
    # }
}
