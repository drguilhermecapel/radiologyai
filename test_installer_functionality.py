#!/usr/bin/env python3
"""
Script para testar a funcionalidade do instalador MedAI Radiologia
Verifica se todos os m√©todos cr√≠ticos est√£o implementados e se a GUI funciona
"""

import sys
import os
from pathlib import Path

def test_installer_methods():
    """Testa se todos os m√©todos cr√≠ticos est√£o implementados"""
    print("üîç Verificando m√©todos cr√≠ticos do instalador...")
    
    try:
        from MedAI_Radiologia_Installer import MedAIWindowsInstaller
        installer = MedAIWindowsInstaller()
        
        methods_to_check = [
            'start_gui_installation',
            'install_with_gui_feedback', 
            'setup_model_system',
            'download_selected_models',
            'verify_model_integrity',
            'setup_offline_models',
            'get_model_registry_content'
        ]
        
        all_methods_exist = True
        for method in methods_to_check:
            if hasattr(installer, method):
                print(f'‚úÖ {method} - ENCONTRADO')
            else:
                print(f'‚ùå {method} - AUSENTE')
                all_methods_exist = False
        
        if all_methods_exist:
            print('\n‚úÖ Todos os m√©todos cr√≠ticos est√£o implementados!')
            print('‚úÖ O instalador n√£o deve mais travar!')
            return True
        else:
            print('\n‚ùå Alguns m√©todos ainda est√£o ausentes!')
            return False
            
    except ImportError as e:
        print(f'‚ùå Erro ao importar o instalador: {e}')
        return False
    except Exception as e:
        print(f'‚ùå Erro inesperado: {e}')
        return False

def test_gui_availability():
    """Testa se a GUI est√° dispon√≠vel"""
    print("\nüîç Verificando disponibilidade da GUI...")
    
    try:
        import tkinter as tk
        print("‚úÖ Tkinter dispon√≠vel - GUI pode ser testada")
        return True
    except ImportError:
        print("‚ö†Ô∏è Tkinter n√£o dispon√≠vel - apenas modo texto")
        return False

def test_threading_implementation():
    """Verifica se o threading est√° implementado corretamente"""
    print("\nüîç Verificando implementa√ß√£o de threading...")
    
    try:
        from MedAI_Radiologia_Installer import MedAIWindowsInstaller
        installer = MedAIWindowsInstaller()
        
        if hasattr(installer, 'start_gui_installation') and hasattr(installer, 'install_with_gui_feedback'):
            print("‚úÖ M√©todos de threading implementados")
            
            import threading
            print("‚úÖ M√≥dulo threading dispon√≠vel")
            return True
        else:
            print("‚ùå M√©todos de threading ausentes")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao verificar threading: {e}")
        return False

if __name__ == "__main__":
    print("üß™ Teste de Funcionalidade do Instalador MedAI Radiologia")
    print("=" * 60)
    
    methods_ok = test_installer_methods()
    
    gui_ok = test_gui_availability()
    
    threading_ok = test_threading_implementation()
    
    print("\n" + "=" * 60)
    print("üìä RESUMO DOS TESTES:")
    print(f"‚úÖ M√©todos implementados: {'SIM' if methods_ok else 'N√ÉO'}")
    print(f"‚úÖ GUI dispon√≠vel: {'SIM' if gui_ok else 'N√ÉO'}")
    print(f"‚úÖ Threading implementado: {'SIM' if threading_ok else 'N√ÉO'}")
    
    if methods_ok and threading_ok:
        print("\nüéâ INSTALADOR PRONTO PARA USO!")
        print("‚úÖ O bot√£o instalar deve funcionar sem travar")
        sys.exit(0)
    else:
        print("\n‚ö†Ô∏è INSTALADOR AINDA TEM PROBLEMAS")
        sys.exit(1)
