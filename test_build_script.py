#!/usr/bin/env python3
"""
Test script to verify build script functionality
"""

import subprocess
import os
import sys

def test_build_script():
    """Test the build script components"""
    print("üîß TESTANDO FUNCIONALIDADE DO BUILD SCRIPT")
    print("=" * 50)
    
    try:
        result = subprocess.run(['python', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ Python dispon√≠vel: {result.stdout.strip()}")
        else:
            print("‚ùå Python n√£o encontrado")
            return False
    except Exception as e:
        print(f"‚ùå Erro ao verificar Python: {e}")
        return False
    
    try:
        result = subprocess.run(['pip', 'list'], capture_output=True, text=True)
        if 'pyinstaller' in result.stdout.lower():
            print("‚úÖ PyInstaller dispon√≠vel")
        else:
            print("‚ö†Ô∏è  PyInstaller n√£o instalado (ser√° instalado pelo script)")
    except Exception as e:
        print(f"‚ö†Ô∏è  Erro ao verificar PyInstaller: {e}")
    
    required_files = [
        'MedAI_Radiologia_Installer.py',
        'MedAI_Installer.spec', 
        'build_final_installer.py',
        'build_installer_windows.bat'
    ]
    
    print("\nüìÅ VERIFICANDO ARQUIVOS NECESS√ÅRIOS")
    print("-" * 40)
    all_files_present = True
    for file_path in required_files:
        if os.path.exists(file_path):
            size = os.path.getsize(file_path) / 1024
            print(f"‚úÖ {file_path} ({size:.1f} KB)")
        else:
            print(f"‚ùå {file_path} - AUSENTE")
            all_files_present = False
    
    print("\nüîç VERIFICANDO CONTE√öDO DO BUILD SCRIPT")
    print("-" * 40)
    try:
        with open('build_installer_windows.bat', 'r', encoding='utf-8') as f:
            content = f.read()
        
        checks = [
            ('python build_final_installer.py', 'Gera√ß√£o do arquivo .spec'),
            ('pyinstaller MedAI_Installer.spec', 'Comando PyInstaller'),
            ('if not exist "MedAI_Installer.spec"', 'Verifica√ß√£o do arquivo .spec'),
            ('goto :end', 'Controle de fluxo')
        ]
        
        for check, description in checks:
            if check in content:
                print(f"‚úÖ {description}")
            else:
                print(f"‚ùå {description} - AUSENTE")
                all_files_present = False
                
        nsis_refs = ['nsis', 'NSIS', 'makensis']
        nsis_found = any(ref in content for ref in nsis_refs)
        if not nsis_found:
            print("‚úÖ Nenhuma refer√™ncia NSIS encontrada")
        else:
            print("‚ùå Refer√™ncias NSIS ainda presentes")
            all_files_present = False
            
    except Exception as e:
        print(f"‚ùå Erro ao verificar build script: {e}")
        all_files_present = False
    
    print("\n" + "=" * 50)
    if all_files_present:
        print("üéâ TODOS OS COMPONENTES DO BUILD EST√ÉO PRONTOS!")
        print("‚úÖ Build script atualizado e funcional")
        print("‚úÖ Instalador Python aut√¥nomo dispon√≠vel")
        print("‚úÖ Nenhuma depend√™ncia NSIS")
        print("‚úÖ Pronto para constru√ß√£o em Windows")
        return True
    else:
        print("‚ùå Alguns componentes est√£o ausentes ou incorretos")
        return False

if __name__ == "__main__":
    success = test_build_script()
    sys.exit(0 if success else 1)
